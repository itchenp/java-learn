@startuml

database 数据库 as D #red

database redis as R #red


机构 -[#blue]> 文件服务: 资料上传
activate 文件服务
文件服务 -[#blue]> 机构: 文件路径
deactivate 文件服务

机构 -[#blue]> 商户前置: 请求

activate 商户前置

商户前置 -[#orange]> D: 查询机构信息，校验机构

note over 商户前置

RSA解密
RSA验签
字段校验

end rnote

商户前置 --[#ff6600]> 机构: 解密验签校验失败，直接返回

== 基本校验start ==
note over 商户前置

校验外部商户号是否重复

end rnote

商户前置 -[#orange]> R: 判断redis中是否存在外部商户号，\n存在则设置值 ，不存在继续查询数据库
商户前置 -[#red]> R: 存在则设置值
商户前置 -[#orange]> D: 不存在 查询外部商户号，判断外部商户是否存在


商户前置 -[#blue]> 微信风控服务: 校验微信风控(http:json)
activate 微信风控服务

微信风控服务 --> 商户前置

deactivate 微信风控服务

商户前置 --> 机构: 微信风控黑名单拦截

note over 商户前置

校验业务码
校验费率

end rnote


商户前置 -[#orange]> D: 查询地区码
note over 商户前置

校验地区码

end rnote



商户前置 -[#blue]> 商户基础服务: 校验联行号(http:json)
activate 商户基础服务
商户基础服务 -[#blue]> 商户前置
deactivate 商户基础服务

商户前置 --> 机构: 联行号不存在,请联系业务人员添加

商户前置 -[#orange]> D: 查询Mcc码
商户前置 --> 机构: mcc码不存在

== 基本校验over ==

商户前置 -[#blue]> 商户终端号生成服务: 获取843支付商户号(http:json)
activate 商户终端号生成服务
商户终端号生成服务 -[#blue]> 商户前置: 返回843商户号
deactivate 商户终端号生成服务


商户前置 -[#red]> D: 存在则：终端入库
商户前置 -[#red]> D: 存在则：支付终端入库
商户前置 -[#red]> D: 商户信息入库
商户前置 -[#red]> D: 结算信息入库
商户前置 -[#red]> D: 支付商户入库
商户前置 -[#red]> D: 费率信息入库
商户前置 -[#red]> D: 审核信息入库
商户前置 -[#red]> D: 商户资料入库

== 送审start ==

商户前置 -[#orange]> D: 查询商户号，校验商户号是否存在
商户前置 -[#orange]> D: 查询待审核信息,判断待审核信息是都入库了

商户前置 -[#blue]> 审件系统:审核信息送审(http:json)

== 送审over ==

activate 审件系统

商户前置 -[#blue]> 机构: 返回机构商户进件成功

note over 商户前置

 定时任务执行送审，每隔一个小时执行一次

end rnote

deactivate 商户前置


note over 审件系统

审核人员审核

end rnote

审件系统 -[#blue]> 商户follow服务: 审核通知（http:json）
activate 商户follow服务

note over 商户follow服务

 业务调度：根据bizType判断

end rnote

== 审核后信息start ==


商户follow服务 -[#orange]> D: 查询商户信息

商户follow服务 -[#red]> D: 更新待审核信息（状态锁）

商户follow服务 --> 审件系统: 更新状态，直接返回

商户follow服务 -[#orange]> D: 查询商户待审核信息



商户follow服务 -[#red]> D: 更新商户基本信息
商户follow服务 -[#red]> D: 更新支付商户基本类别，支付终端状态
商户follow服务 -[#red]> D: 更新费率信息（先查询，后判断是否更新/插入）
商户follow服务 -[#red]> D: 更新商户结算信息\n（查询原默认结算信息，更新，查询卡号相关结算信息，插入/更新）\n(这里一开始查询更新，可以放一起)
商户follow服务 -[#red]> D: 更新商户交易金额限制记录（更新原纪录为无效，新记录为有效）
商户follow服务 -[#red]> D: 更新商户风控等级，权限等（这里可以优化，放到第一步中）


商户follow服务 -[#blue]> 审件系统: 成功

== 审核后信息over ==

deactivate 审件系统

商户follow服务 -[#green]> 通知服务: 有卡通知


商户follow服务 --[#green]> 开户
activate 开户
开户 -[#green]> 账户系统: 开户(socket)


activate 账户系统
账户系统 -[#green]> 开户: 返回账户id
开户 -[#red]> D:更新商户账户信息
deactivate 开户
deactivate 账户系统



商户follow服务 --[#green]> 无卡进件服务

activate 无卡进件服务

无卡进件服务 -[#orange]> D: 查询结算信息
无卡进件服务 -[#orange]> D: 查询地区码
note over 无卡进件服务

构建进件报文

end note
无卡进件服务 -[#green]> 无卡网关: 无卡进件 (http:json)
activate 无卡网关



无卡网关 -[#green]> 无卡进件服务: 无卡商户号（微信，支付宝[银联，网联渠道]）
deactivate 无卡网关
无卡进件服务 -[#red]> D: 插入无卡进件日志
无卡进件服务 -[#orange]> D: 1,查询是否有银联商户号
无卡进件服务 -[#red]> D: 2,插入/更新银联商户号
无卡进件服务 -[#orange]> D: 1,查询是否有微信商户号
无卡进件服务 -[#red]> D: 2,插入/更新微信商户号
无卡进件服务 -[#orange]> D: 1,查询是否有支付宝商户号
无卡进件服务 -[#red]> D: 2,插入/更新支付宝商户号

note over 无卡进件服务

上面三次查询 可以优化为一次查询

end note

deactivate 无卡进件服务

note over 无卡进件服务

 微信进件成功调用
 实名认证服务

end rnote

无卡进件服务 -[#green]> 微信实名认证:微信实名认证(http:json)


note over 无卡进件服务

 无卡进件成功调用通知服务

end rnote

无卡进件服务 -[#green]> 通知服务: 无卡通知

deactivate 商户follow服务

note over 商户follow服务

 定时任务，
 跑批开户失败的商户

end rnote


note over 商户follow服务

 定时任务，
 跑批进件无卡进件失败的商户

end rnote

database 数据库 as D #red

database redis as R #red


@enduml